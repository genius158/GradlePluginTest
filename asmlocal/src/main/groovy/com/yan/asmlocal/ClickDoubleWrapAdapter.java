package com.yan.asmlocal;import org.objectweb.asm.Label;import org.objectweb.asm.MethodVisitor;import org.objectweb.asm.Opcodes;import org.objectweb.asm.commons.LocalVariablesSorter;/** * @author Bevan (Contact me: https://github.com/genius158) * @since 2020/9/15 */public class ClickDoubleWrapAdapter extends LocalVariablesSorter implements Opcodes {  private String classNamePath;  private String className;  private String superClassName;  private String methodDes;  private String methodName;  private AsmLocalExtension asmLocalExtension;  //ACC_PUBLIC, "onClick", "(Landroid/view/View;)V"  public static boolean intercept(String className, String superClassName, final int access,      final String name,      final String desc, final String signature, final String[] exceptions) {    if (name.equals("onClick") && desc.equals("(Landroid/view/View;)V")        && access == ACC_PUBLIC) {      KernelLog.info("onClick"+ "   "+name+"  "+desc+"   "+signature+"  "+className+"  "+superClassName);      return true;    }    return false;  }  public ClickDoubleWrapAdapter(String className, String superClassName, String methodName,      int access,      String desc,      MethodVisitor mv, AsmLocalExtension asmLocalExtension) {    super(Opcodes.ASM5, access, desc, mv);    this.classNamePath = className.replace(".", "/");    this.className = className;    this.superClassName = superClassName;    this.methodName = methodName;    this.methodDes = desc;    this.asmLocalExtension = asmLocalExtension;  }  @Override  public void visitTypeInsn(int opcode, String type) {    super.visitTypeInsn(opcode, type);  }  @Override  public void visitCode() {    super.visitCode();    KernelLog.info("onMethodEnter onMethodEnter onMethodEnter");    mv.visitVarInsn(ALOAD, 1);    mv.visitMethodInsn(INVOKESTATIC, "com/yan/asmlocalcode/DoubleClickCheck",        "willIntercept", "(Landroid/view/View;)Z", false);    Label label = new Label();    mv.visitJumpInsn(IFEQ, label);    mv.visitInsn(RETURN);    mv.visitLabel(label);  } }